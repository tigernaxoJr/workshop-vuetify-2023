import{_ as t,o as e,c as a,Q as r}from"./chunks/framework.1eafcbb1.js";const m=JSON.parse('{"title":"Hybrid App","description":"","frontmatter":{},"headers":[],"relativePath":"other/hybrid.md","filePath":"other/hybrid.md"}'),i={name:"other/hybrid.md"},s=r('<h1 id="hybrid-app" tabindex="-1">Hybrid App <a class="header-anchor" href="#hybrid-app" aria-label="Permalink to &quot;Hybrid App&quot;">​</a></h1><p>混合式應用程式是一種使用 Web 技術 (例如 HTML、CSS 和 JavaScript) 和原生技術 (例如 Swift、Kotlin 和 C#) 開發的應用程式。混合式應用程式可以跨平台運行。 可做到讓前端程式碼呼叫原生程式。</p><table><thead><tr><th>功能</th><th>Webview2</th><th>Tauri</th></tr></thead><tbody><tr><td>發行檔是否包裹前端程式碼</td><td>否</td><td>是</td></tr><tr><td>運行時是否需要網路連結</td><td>是</td><td><mark>否 </mark></td></tr><tr><td>運行時是否需要 runtime</td><td>是</td><td><mark>否</mark></td></tr><tr><td>前端有更新需重新佈署</td><td><mark>否</mark></td><td>是</td></tr><tr><td>性能</td><td>中等</td><td><mark>高 </mark></td></tr><tr><td>開發難度</td><td><mark>低</mark></td><td>中等</td></tr><tr><td>維護成本</td><td>低(不考慮前端維護)<br> 高(考慮前端維護)</td><td>中等</td></tr></tbody></table><h2 id="webview2" tabindex="-1">WebView2 <a class="header-anchor" href="#webview2" aria-label="Permalink to &quot;WebView2&quot;">​</a></h2><p>Webview2是由Microsoft開發的技術，它是一個嵌入式Web瀏覽器控件，可用於在應用程式中顯示Web內容。 它使用Microsoft的Edge瀏覽器作為其渲染引擎，因此可以提供與Edge瀏覽器相同的Web兼容性和功能。 Webview2通常與.NET和C++應用程式一起使用，可在Windows平台上嵌入Web視圖。 它適用於開發使用Windows API或.NET框架的應用程式，並具有完整的Windows集成能力。</p><p>需求：</p><ul><li>Visual Studio 2017 (開發)</li><li>.Net Framework 4.7.2 以上</li></ul><p>單檔包裹體驗：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/tigernaxoJr/WebView2.git</span></span>\n<span class="line"><span style="color:#6A737D;"># 修改 `MainForm.cs` 裡面的網址，執行專案。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/tigernaxoJr/WebView2.git</span></span>\n<span class="line"><span style="color:#6A737D;"># 修改 `MainForm.cs` 裡面的網址，執行專案。</span></span></code></pre></div><h2 id="tauri" tabindex="-1">Tauri <a class="header-anchor" href="#tauri" aria-label="Permalink to &quot;Tauri&quot;">​</a></h2><p>Tauri是一個用於構建桌面應用程式的工具集，它結合了Rust和Web技術。 它使用Web技術（如HTML、CSS和JavaScript）來構建用戶界面，並使用Rust來構建桌面應用程式的外殼。 Tauri允許您使用Web技術來構建應用程式的前端，同時在桌面應用程式外殼中使用Rust來處理本機功能和系統調用。 Tauri提供了跨平台支援，可在Windows、macOS和Linux等多個平台上運行。</p><p>需求：</p><ul><li>Rust (開發)</li><li>Microsoft C++ build tools (開發)</li><li>Visual Studio Desktop development with C++ (開發)</li><li>Windows 10 SDK (開發)</li><li>WebView2 (Windows 10 (1803)/ Windows 11 以後不需要)</li></ul><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><ul><li><a href="https://learn.microsoft.com/en-us/microsoft-edge/webview2/" target="_blank" rel="noreferrer">MSDN - WebView2</a></li><li><a href="https://learn.microsoft.com/en-us/microsoft-edge/webview2/get-started/winforms" target="_blank" rel="noreferrer">MSDN - Get started with WebView2 in WinForms apps</a></li><li><a href="https://github.com/tigernaxoJr/WebView2" target="_blank" rel="noreferrer">Github - tiernaxoJr/webview2</a></li><li><a href="https://tauri.app/" target="_blank" rel="noreferrer">Tauri</a></li><li><a href="https://tauri.app/v1/guides/getting-started/setup/vite" target="_blank" rel="noreferrer">Tauri - Quick Start/Vite</a></li></ul>',15),o=[s];function l(n,d,p,c,h,b){return e(),a("div",null,o)}const f=t(i,[["render",l]]);export{m as __pageData,f as default};
