import{_ as e,o,c as t,Q as r}from"./chunks/framework.53e4b211.js";const m=JSON.parse('{"title":"草稿","description":"","frontmatter":{},"headers":[],"relativePath":"workshop/other/cohesion.md","filePath":"workshop/other/cohesion.md"}'),i={name:"workshop/other/cohesion.md"},a=r('<h1 id="草稿" tabindex="-1">草稿 <a class="header-anchor" href="#草稿" aria-label="Permalink to &quot;草稿&quot;">​</a></h1><h1 id="內聚性原則-component-cohesion-principles" tabindex="-1">內聚性原則(component cohesion principles) <a class="header-anchor" href="#內聚性原則-component-cohesion-principles" aria-label="Permalink to &quot;內聚性原則(component cohesion principles)&quot;">​</a></h1><p>元件內聚性原則是指內部的功能應該有適當的關聯性和一致性，以提高元件的可讀性、可維護性和可重用性。有三個主要的原則，分別是：</p><p>對於還不夠成熟或穩定的類別，如果過早地抽象化成元件，可能會增加修改的成本和風險。 特定功能所依賴的元件，不是散落在程式碼各處，而是相對集中在一起=&gt;降低依賴數量=&gt;也能夠實現低耦合。</p><h2 id="內聚姓三大原則" tabindex="-1">內聚姓三大原則 <a class="header-anchor" href="#內聚姓三大原則" aria-label="Permalink to &quot;內聚姓三大原則&quot;">​</a></h2><ul><li>再使用性/發佈等價原則（Reuse/Release Equivalence Principle, REP） <blockquote><p>這個原則認為一個元件應該包含<strong>所有需要重用</strong>的類別和文件，而<strong>不是透過複製貼上的方式來重用程式碼</strong>。</p></blockquote></li><li>共同封閉原則（Common Closure Principle, CCP）：這個原則認為一個元件應該只有一個引起變化的原因，而且相同原因改變的類別應該放在同一個元件內。</li><li>共同重複使用原則（Common Reuse Principle, CRP）：這個原則認為一個元件應該<strong>只包含相關的類別</strong>，而不是讓使用者依賴一些他們不需要的類別。</li></ul><p>這三個原則之間有一定的張力和平衡，需要根據實際的需求和情況來調整元件的內聚性。</p><ul><li>將元件拆分成更小的子元件，並將相關的邏輯和狀態傳遞給子元件。這樣可以減少元件的責任和複雜度，並讓每個子元件專注於一個功能。</li><li>使用自定義hook來封裝和重用相關的邏輯和狀態。自定義hook可以讓我們抽象出元件之間共享的邏輯，並將其放在一個獨立的模塊中。這樣可以避免重複的代碼，並讓元件更容易測試和調試。</li><li>使用context來管理全局或跨元件的狀態。context可以讓我們在元件樹中傳遞數據，而不需要逐層傳遞props。這樣可以減少props的數量和深度，並讓元件更容易理解和重構。</li></ul><h2 id="reference" tabindex="-1">Reference <a class="header-anchor" href="#reference" aria-label="Permalink to &quot;Reference&quot;">​</a></h2><ul><li>Clean Architecture 整潔的軟體設計與架構篇</li><li><a href="https://ithelp.ithome.com.tw/articles/10254888" target="_blank" rel="noreferrer"></a></li></ul>',10),n=[a];function l(c,s,h,p,_,u){return o(),t("div",null,n)}const f=e(i,[["render",l]]);export{m as __pageData,f as default};
